from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton

from keyboards.inline.callbacks import order_callback
from loader import _


def get_order_keyboard(order):
    markup = InlineKeyboardMarkup(resize_keyboard=True, row_width=1)
    markup.row(
        InlineKeyboardButton(
            text=_("–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ç–æ–≤–∞—Ä—ã üîé"),
            callback_data=order_callback.new(order_id=order.id, action="show_items", admin=False)
        )
    )
    if order.canceled is not True and order.successful is not True:
        markup.row(
            InlineKeyboardButton(
                text=_("–û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑ ‚ùå"),
                callback_data=order_callback.new(order_id=order.id, action="cancel_order", admin=False)
            )
        )
    return markup


def get_order_text_and_keyboard(order):
    status = _("–ó–∞–≤–µ—Ä—à–µ–Ω ‚úÖ") if order.successful == True else _("–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è üïó")
    if order.canceled is True:
        status = _("–û—Ç–º–µ–Ω–µ–Ω ‚ùå")
    order_text = _("<b>–ó–∞–∫–∞–∑ ‚Ññ{order_id}</b>\n"
                   "<b>–°—É–º–º–∞:</b> {order_sum:,} —Å—É–º.\n"
                   "<b>–í—Ä–µ–º—è –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è:</b> {order_time}\n\n"
                   "<b>–°—Ç–∞—Ç—É—Å:</b> {status}".format(order_id=order.id,
                                                    order_sum=order.sum,
                                                    order_time=order.datetime.strftime("%m/%d/%Y, %H:%M:%S"),
                                                    status=status))
    reply_markup = get_order_keyboard(order)
    return {
        "order_text": order_text,
        "reply_markup": reply_markup
    }
