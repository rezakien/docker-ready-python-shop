from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from keyboards.inline.callbacks import order_callback
from loader import _


def get_order_text_and_keyboard_admin(order):
    status = _("–ó–∞–≤–µ—Ä—à–µ–Ω ‚úÖ") if order.successful == True else _("–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è üïó")
    if order.canceled is True:
        status = _("–û—Ç–º–µ–Ω–µ–Ω ‚ùå")
    order_text = _("–ó–∞–∫–∞–∑ ‚Ññ{order_id}\n"
                   "–°—É–º–º–∞: {order_sum:,} —Å—É–º.\n"
                   "–í—Ä–µ–º—è –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è: {order_time}\n\n"
                   "–°—Ç–∞—Ç—É—Å: {status}".format(order_id=order.id,
                                             order_sum=order.sum,
                                             order_time=order.datetime.strftime("%m/%d/%Y, %H:%M:%S"),
                                             status=status))
    reply_markup = get_order_keyboard_admin(order.id, order.canceled)
    return {
        "order_text": order_text,
        "reply_markup": reply_markup
    }


def get_order_keyboard_admin(order_id, canceled=False):
    markup = InlineKeyboardMarkup(resize_keyboard=True, row_width=1)
    markup.row(
        InlineKeyboardButton(
            text=_("–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ç–æ–≤–∞—Ä—ã üîé"),
            callback_data=order_callback.new(order_id=order_id, action="show_items")
        )
    )
    if canceled is not True:
        markup.row(
            InlineKeyboardButton(
                text=_("–ó–∞–≤–µ—Ä—à–∏—Ç—å –∑–∞–∫–∞–∑ ‚úÖ"),
                callback_data=order_callback.new(order_id=order_id, action="confirm_order")
            )
        )
        markup.row(
            InlineKeyboardButton(
                text=_("–û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑ ‚ùå"),
                callback_data=order_callback.new(order_id=order_id, action="cancel_order")
            )
        )
    return markup