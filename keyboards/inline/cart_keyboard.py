from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton, CallbackQuery, KeyboardButton

from keyboards.inline.callbacks import cart_callback
from keyboards.inline.menu_keyboard import item_keyboard
from loader import _
from utils.db import Cart, Item


def get_cart_keyboard():
    markup = InlineKeyboardMarkup(resize_keyboard=True, row_width=1)
    markup.row(InlineKeyboardButton(text=_("–û—á–∏—Å—Ç–∏—Ç—å üõí"), callback_data=cart_callback.new(action="clear")))
    markup.row(InlineKeyboardButton(text=_("–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ç–æ–≤–∞—Ä—ã üîé"), callback_data=cart_callback.new(action="show")))
    markup.row(InlineKeyboardButton(text=_("–ö –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—é –∑–∞–∫–∞–∑–∞ ‚úÖ"), callback_data=cart_callback.new(action="order")))
    return markup


async def get_items_with_keyboard(call: CallbackQuery):
    cart_items = await Cart.get_cart_items()
    if len(cart_items) > 0:
        for cart_item in cart_items:
            item = await Item.get_item(cart_item.item_id)
            text = await get_cart_item_text(cart_item, item)
            reply_markup = item_keyboard(item.id, 'cart')
            await call.message.answer(text=text, reply_markup=reply_markup)


async def get_cart_item_text(cart_item, item):
    item = await Item.get_item(cart_item.item_id)
    price = await item.get_price(cart_item.quantity)
    return _("<b>–¢–æ–≤–∞—Ä:</b> {item_name}\n"
             "<b>–¶–µ–Ω–∞ –∑–∞ –∫–≥:</b> {price:,} —Å—É–º.\n"
             "<b>–û–±—ä–µ–º:</b> {quantity:,} –∫–≥.\n"
             "<b>–°—Ç–æ–∏–º–æ—Å—Ç—å —Ç–æ–≤–∞—Ä–∞: </b> {summary:,} —Å—É–º.".format(item_name=item.name, price=int(price),
                                                               quantity=cart_item.quantity,
                                                               summary=cart_item.quantity * int(price)))
